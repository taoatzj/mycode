<?xml version="1.0" encoding="UTF-8"?>    
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"    
    xmlns:context="http://www.springframework.org/schema/context"    
    xmlns:mvc="http://www.springframework.org/schema/mvc"    
    xsi:schemaLocation="http://www.springframework.org/schema/beans      
                        http://www.springframework.org/schema/beans/spring-beans.xsd      
                        http://www.springframework.org/schema/context      
                        http://www.springframework.org/schema/context/spring-context.xsd      
                        http://www.springframework.org/schema/mvc      
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">    
    
    <!-- 引入配置文件 -->    
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">    
        <property name="location" value="classpath:jdbc.properties" />    
    </bean>    
    
    <!--  <context:property-placeholder location="classpath:jdbc.properties" />    -->
    
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">    
        <property name="driverClassName" value="${driver}" />    
        <property name="url" value="${url}" />    
        <property name="username" value="${username}" />    
        <property name="password" value="${password}" />
        <property name="validationQuery" value="${validationQuery}" />  
        <!-- 初始化连接大小 -->    
        <property name="initialSize" value="${initialSize}"/>    
        <!-- 连接池最大数量 -->    
        <property name="maxActive" value="${maxActive}"/>    
        <!-- 连接池最大空闲 -->    
        <property name="maxIdle" value="${maxIdle}"/>    
        <!-- 连接池最小空闲 -->    
        <property name="minIdle" value="${minIdle}"/>    
        <!-- 获取连接最大等待时间 -->    
        <property name="maxWait" value="${maxWait}"/>  
        <!-- testOnBorrow和testOnReturn在生产环境一般是不开启的，主要是性能考虑。
        	失效连接主要通过testWhileIdle保证，
        		如果获取到了不可用的数据库连接，一般由应用处理异常。 -->
        <property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
        
        
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat,wall" />
        
    </bean>    
     
        
     <!-- 让spring管理sqlsessionfactory 使用mybatis和spring整合包中的 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		  <!-- 自动扫描mapping.xml文件 -->    
        <property name="mapperLocations" value="classpath:cn/ssm/test/mapper/*.xml"></property>    
	</bean>

        
        
</beans>  